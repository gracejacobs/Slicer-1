var_2 <- c(4, NaN, NaN) #make var 2
var_3 <- rep('cat', 3)
testDF <- as.data.frame(rbind(var_1, var_2, var_3)) #put into df
testDF
testDF <- as.data.frame(cbind(var_1, var_2, var_3)) #put into df
testDF
#remove rows with NaN
testDF2 <- testDF[complete.cases(testDF),] #works!
#check structure testDF2
str(testDF2)
testDF
testDF2
#make a df
var_1 <- c(1, 2, NaN) #make var 1
var_2 <- c(4, NaN, NaN) #make var 2
var_3 <- rep('cat', 3)
testDF <- as.data.frame(cbind(var_1, var_2, var_3)) #put into df
#remove rows with NaN
testDF2 <- testDF[complete.cases(testDF),] #works!
testDF
testDF2
#remove rows with NaN
testDF2 <- testDF[complete.cases(testDF),] #works!
testDF2
testDF
#make a df
var_1 <- c(1, 2, NaN) #make var 1
var_2 <- c(4, NaN, NaN) #make var 2
var_3 <- rep('cat', 3)
testDF <- as.data.frame(cbind(var_1, var_2, var_3)) #put into df
#remove rows with NaN
testDF2 <- testDF[complete.cases(testDF[, 1:2]),] #doesn't work with factors
str(testDF2)
testDF$var_1 <- as.numeric(testDF$var_1)
testDF$var_2 <- as.numeric(testDF$var_2)
testDF$var_1 <- as.numeric(testDF$var_1)
testDF$var_2 <- as.numeric(testDF$var_2)
str(testDF)
#remove rows with NaN
testDF2 <- testDF[complete.cases(testDF[, 1:2]),] #doesn't work with factors
testDF2
str(var_3)
#make variables
var_1 <- c(1, 2, NaN) #numeric
var_2 <- c(4, NaN, NaN) #numeric
var_3 <- rep('cat', 3) #string
#make first df - with just numeric
df_1 <- as.data.frame(cbind(var_1, var_2))
#make second df, with the string variable
df_2 <- as.data.frame(cbind(var_1, var_2, var_3)) #put into df
str(df_1)
str(df_2)
#make second df, with the string variable
df_2 <- as.data.frame(cbind(as.numeric(var_1), as.numeric(var_2), var_3)) #put into df
str(df_2)
#make second df, with the string variable
df_2 <- as.data.frame(cbind(var_1, var_2)) #put into df
df_2
str(df_2)
#make second df, with the string variable
df_2 <- as.data.frame(cbind(df_1, var_2)) #put into df
df_2
#make second df, with the string variable
df_2 <- as.data.frame(cbind(df_1, var_3)) #put into df
df_2
str(df_2)
#remove rows with NaN
df_1_noNAN <- df_1[complete.cases(df_1),] #doesn't work with factors
df_1_noNAN
#remove rows with NaN
df_2_noNAN <- df_2[complete.cases(df_2),] #it works!
df_2_noNAN
df_1_noNAN
str(df_1)
str(df_2)
str(df)
ncol(df)
#make sure that all the numeric columns are actually numeric
df[4:17] <- as.numeric(df[4:17])
#make sure that all the numeric columns are actually numeric
df[,4:17] <- as.numeric(df[,4:17])
#make sure that all the numeric columns are actually numeric
df[,4:17] <- as.numeric(as.character(df[,4:17]))
#This script is used to pull in csvs that are output from Slicer, and extra relevant values
```{r setup}
#libraries
library('data.table')
library('tidyverse')
library('dplyr')
library('knitr')
library('stringr')
library('stringi')
#note: I first first moved all csvs from the 3 directory (commissural, left, right) into a single directory, in bash.
#cd /projects/ncalarco/thesis/SPINS/Slicer/data/registered/FiberMeasurements
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
```
```{r}
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
df$tensors.Trace.Mean <- as.numeric(as.character(df$tensors.Trace.Mean))
str(df$tensors.Trace.Mean )
str(df$tensors.SphericalMeasure.Mean)
install.packages('varhandle')
library('varhandle')
?unfactor
df[, 4:17] <- unfactor(df[, 4:17])
str(df)
#This script is used to pull in csvs that are output from Slicer, and extra relevant values
```{r setup}
#libraries
library('data.table')
library('tidyverse')
library('dplyr')
library('knitr')
library('stringr')
library('stringi')
library('varhandle')
#note: I first first moved all csvs from the 3 directory (commissural, left, right) into a single directory, in bash.
#cd /projects/ncalarco/thesis/SPINS/Slicer/data/registered/FiberMeasurements
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
```
```{r}
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
as.character(df[,4:17])
as.numeric(as.character(df[,4:17]))
#This script is used to pull in csvs that are output from Slicer, and extra relevant values
```{r setup}
#libraries
library('data.table')
library('tidyverse')
library('dplyr')
library('knitr')
library('stringr')
library('stringi')
library('varhandle')
#note: I first first moved all csvs from the 3 directory (commissural, left, right) into a single directory, in bash.
#cd /projects/ncalarco/thesis/SPINS/Slicer/data/registered/FiberMeasurements
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
```
```{r}
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
df[,4:17] <- as.numeric(as.character(df[,4:17]))
#make sure that all the numeric columns are actually numeric
makeNumeric <- names(df[4:17])
makeNumeric
#make sure that all the numeric columns are actually numeric
makeNumeric <- names(df[6:17])
#make sure that all the numeric columns are actually numeric
makeNumeric <- names(df[6:17])
as.numeric(levels(df %in% makeNumeric))[df %in% makeNumeric]
str(df)
#This script is used to pull in csvs that are output from Slicer, and extra relevant values
```{r setup}
#libraries
library('data.table')
library('tidyverse')
library('dplyr')
library('knitr')
library('stringr')
library('stringi')
library('varhandle')
#note: I first first moved all csvs from the 3 directory (commissural, left, right) into a single directory, in bash.
#cd /projects/ncalarco/thesis/SPINS/Slicer/data/registered/FiberMeasurements
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
```
```{r}
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
#make sure that all the numeric columns are actually numeric
makeNumeric <- names(df[6:17])
makeNumeric
as.numeric(levels(names(df) %in% makeNumeric))[names(df) %in% makeNumeric]
#This script is used to pull in csvs that are output from Slicer, and extra relevant values
```{r setup}
#libraries
library('data.table')
library('tidyverse')
library('dplyr')
library('knitr')
library('stringr')
library('stringi')
library('varhandle')
#note: I first first moved all csvs from the 3 directory (commissural, left, right) into a single directory, in bash.
#cd /projects/ncalarco/thesis/SPINS/Slicer/data/registered/FiberMeasurements
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
```
```{r}
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
#make sure that all the numeric columns are actually numeric
makeNumeric <- names(df[6:17])
#libraries
library('data.table')
library('tidyverse')
library('dplyr')
library('knitr')
library('stringr')
library('stringr')
library('stringi')
library('varhandle')
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
df_test <- df
df_test[,7:17] <- lapply(df_test[,6:17],as.numeric)
df_test2 <- df
df_test2[,6:17] <- lapply(df_test2[,6:17],as.numeric)
str(df_test2)
View(df_test2[1:150])
View(df_test2[,1:150])
View(df_test2[1:150,])
df_test3 <- df
View(df_test3[1:150,])
str(df_test3)
df_test3[,6:17] <- lapply(df_test3[,6:17],as.character)
str(df_test3)
df_test3[,6:17] <- lapply(df_test3[,6:17],as.numeric)
str(df_test3)
#make sure that all the numeric columns are actually numeric
df[,6:17] <- lapply(df[,6:17],as.character); df[,6:17] <- lapply(df[,6:17],as.numeric)
str(df)
df_new <- df[complete.cases(df),]
View(df_new[1:100,])
8099/3
getwd()
#write.csv
write.csv(df, '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/FiberMeasurements_2019-11-22.csv', row.names = FALSE)
#libraries
library('data.table')
library('tidyverse')
library('tidyverse')
library('dplyr')
library('stringr')
library('stringi')
library('varhandle')
install.packages('varhandle')
library('varhandle')
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
library('knitr')
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 594
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#set working directory like this, so it doesn't change in each chunk!
opts_knit$set(root.dir = '/mnt/tigrlab/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs')
#create a vector of the csvs in our directory
csvs <- list.files(path='/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/05_FiberMeasurements_csvs', pattern="*.csv") #have 1335
#make sure that the 'index for rbind will be the filename (and not list index)
csvs <- setNames(csvs, csvs)
#read the csv files in as a single list
csv_list = lapply(csvs, read.delim)
#combine the list elements into a single df, and make a filename column
df <- rbindlist(csv_list, idcol = "index", fill=TRUE)
#make a unique column for subject ID
df$participant_id <- str_sub(df$index, -15, -5)
head(df$participant_id)
#make a column for file type
df$hemisphere <- sapply(strsplit(df$index, "_"), function(x) x[2])
#make a column for tract
spl <- strsplit(as.character(df$Name), "/") #split at last slash
head(df$region)
df$region <- sapply(lapply(spl, tail, 1), paste, collapse="/")
df$region <- gsub(".vtp ", "" , df$region) #remove file extension
head(df$region)
#remove 'index' and 'Name' variable
df <- df[, -c('index', 'Name')]
#reorder variables for clarity
df <- as.data.frame(df[, c("participant_id",
"hemisphere",
"region",
"Num_Points",
"Num_Fibers",
"Mean_Length",
"cluster_idx.Mean",
"tensors.FractionalAnisotropy.Mean",
"tensors.LinearMeasure.Mean",
"tensors.MaxEigenvalue.Mean",
"tensors.MeanDiffusivity.Mean",
"tensors.MidEigenvalue.Mean",
"tensors.MinEigenvalue.Mean",
"tensors.PlanarMeasure.Mean",
"tensors.RelativeAnisotropy.Mean",
"tensors.SphericalMeasure.Mean",
"tensors.Trace.Mean")])
#make sure that all the numeric columns are actually numeric
df[,6:17] <- lapply(df[,6:17],as.character); df[,6:17] <- lapply(df[,6:17],as.numeric)
#if row contains all NAN, delete that row: not part of the region
df <- df[complete.cases(df),]
head(df)
#write.csv
write.csv(df, paste0('/projects/ncalarco/thesis/SPINS/Slicer/txt_outputs/FiberMeasurements_', Sys.Date(), '.csv', sep=''), row.names = F)
